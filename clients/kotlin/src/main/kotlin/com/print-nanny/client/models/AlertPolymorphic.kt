/**
* 
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 0.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package com.print-nanny.client.models

import com.print-nanny.client.models.Alert
import com.print-nanny.client.models.AlertMethodEnum
import com.print-nanny.client.models.AlertTypeEnum
import com.print-nanny.client.models.ManualVideoUploadAlert
import com.print-nanny.client.models.PrintSessionAlert
import com.print-nanny.client.models.PrintSessionAlertAlertSubtypeEnum
import com.print-nanny.client.models.ProgressAlert
import com.print-nanny.client.models.RemoteControlCommandAlert

import com.squareup.moshi.Json
import java.io.Serializable

/**
 * 
 * @param alertSubtype 
 * @param alertType 
 * @param color 
 * @param icon 
 * @param description 
 * @param title 
 * @param device 
 * @param annotatedVideo 
 * @param printSession 
 * @param createdDt 
 * @param updatedDt 
 * @param user 
 * @param time 
 * @param seen 
 * @param octoprintDevice 
 * @param alertMethod 
 * @param dashboardUrl 
 * @param metadata 
 * @param id 
 * @param sent 
 * @param progressPercent Progress notification interval. Example: 25 will notify you at 25%, 50%, 75%, and 100% progress
 * @param polymorphicCtype 
 * @param needsReview 
 */

interface AlertPolymorphic : Serializable {
    companion object {
        private const val serialVersionUID: Long = 123
    }

    @Json(name = "alert_subtype")
    val alertSubtype: PrintSessionAlertAlertSubtypeEnum
    @Json(name = "alert_type")
    val alertType: AlertTypeEnum
    @Json(name = "color")
    val color: kotlin.String
    @Json(name = "icon")
    val icon: kotlin.String
    @Json(name = "description")
    val description: kotlin.String
    @Json(name = "title")
    val title: kotlin.String
    @Json(name = "device")
    val device: kotlin.Int
    @Json(name = "annotated_video")
    val annotatedVideo: java.net.URI
    @Json(name = "print_session")
    val printSession: kotlin.Int
    @Json(name = "created_dt")
    val createdDt: java.time.OffsetDateTime?
    @Json(name = "updated_dt")
    val updatedDt: java.time.OffsetDateTime?
    @Json(name = "user")
    val user: kotlin.Int?
    @Json(name = "time")
    val time: kotlin.String?
    @Json(name = "seen")
    val seen: kotlin.Boolean?
    @Json(name = "octoprint_device")
    val octoprintDevice: kotlin.Int?
    @Json(name = "alert_method")
    val alertMethod: AlertMethodEnum?
    @Json(name = "dashboard_url")
    val dashboardUrl: kotlin.String?
    @Json(name = "metadata")
    val metadata: kotlin.String?
    @Json(name = "id")
    val id: kotlin.Int?
    @Json(name = "sent")
    val sent: kotlin.Boolean?
    /* Progress notification interval. Example: 25 will notify you at 25%, 50%, 75%, and 100% progress */
    @Json(name = "progress_percent")
    val progressPercent: kotlin.Int?
    @Json(name = "polymorphic_ctype")
    val polymorphicCtype: kotlin.Int?
    @Json(name = "needs_review")
    val needsReview: kotlin.Boolean?
}

