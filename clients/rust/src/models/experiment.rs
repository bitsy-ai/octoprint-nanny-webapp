/*
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Experiment {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "created_dt", skip_serializing_if = "Option::is_none")]
    pub created_dt: Option<String>,
    #[serde(rename = "active", skip_serializing_if = "Option::is_none")]
    pub active: Option<bool>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "hypothesis")]
    pub hypothesis: String,
    #[serde(rename = "control", skip_serializing_if = "Option::is_none")]
    pub control: Option<Box<crate::models::Nested>>,
    #[serde(rename = "treatments", skip_serializing_if = "Option::is_none")]
    pub treatments: Option<Vec<crate::models::Nested>>,
    #[serde(rename = "notion_url", skip_serializing_if = "Option::is_none")]
    pub notion_url: Option<String>,
}

impl Experiment {
    pub fn new(name: String, hypothesis: String) -> Experiment {
        Experiment {
            id: None,
            created_dt: None,
            active: None,
            name,
            hypothesis,
            control: None,
            treatments: None,
            notion_url: None,
        }
    }
}


