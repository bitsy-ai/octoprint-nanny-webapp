---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: celery-worker
  template:
    metadata:
      labels:
        app: celery-worker
    spec:
      serviceAccountName: sql-webapp
      containers:
      - name: celery-worker
        image: us.gcr.io/print-nanny/print_nanny_webapp_production_django:latest
        command: 
          - /start-celeryworker
        envFrom:
          - configMapRef:
              name: webapp
        env:
          - name: HONEYCOMB_SERVICE_NAME
            value: celery-worker
        volumeMounts:
        - name: dataflow-service-account
          mountPath: /etc/service-account
          readOnly: true
      volumes:
        - name: dataflow-service-account
          secret:
            secretName: dataflow-service-account
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: celery-worker
  template:
    metadata:
      labels:
        app: celery-worker
    spec:
      serviceAccountName: sql-webapp
      containers:
      - name: octoprint-events
        command: 
          - python
          - print_nanny_webapp/client_events/subscribers/octoprint_events.py
        image: us.gcr.io/print-nanny/print_nanny_webapp_production_django:latest
        ports:
        - containerPort: 8000
        - containerPort: 8001
        envFrom:
          - configMapRef:
              name: webapp
        env:
          - name: HONEYCOMB_SERVICE_NAME
            value: octoprint-events
        volumeMounts:
        - name: dataflow-service-account
          mountPath: /etc/service-account
          readOnly: true
      volumes:
        - name: dataflow-service-account
          secret:
            secretName: dataflow-service-account
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django
  template:
    metadata:
      labels:
        app: django
    spec:
      serviceAccountName: sql-webapp
      containers:
      - name: django
        image: us.gcr.io/print-nanny/print_nanny_webapp_production_django:latest
        livenessProbe:
          httpGet:
            path: /health/
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 4
        readinessProbe:
          httpGet:
            path: /health/
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 4
        command: 
          - /start
        envFrom:
          - configMapRef:
              name: webapp
        volumeMounts:
        - name: dataflow-service-account
          mountPath: /etc/service-account
          readOnly: true
      - name: cloud-sql-proxy
        # It is recommended to use the latest version of the Cloud SQL proxy
        # Make sure to update on a regular schedule!
        image: gcr.io/cloudsql-docker/gce-proxy:1.17
        command:
          - "/cloud_sql_proxy"

          # If connecting from a VPC-native GKE cluster, you can use the
          # following flag to have the proxy connect over private IP
          # - "-ip_address_types=PRIVATE"

          # Replace DB_PORT with the port the proxy should listen on
          # Defaults: MySQL: 3306, Postgres: 5432, SQLServer: 1433
          - "-instances=print-nanny:us-central1:print-nanny=tcp:5432"
        securityContext:
          # The default Cloud SQL proxy image runs as the
          # "nonroot" user and group (uid: 65532) by default.
          runAsNonRoot: true
        ports:
          - containerPort: 5432
      volumes:
        - name: dataflow-service-account
          secret:
            secretName: dataflow-service-account
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: sql-webapp
  annotations:
    iam.gke.io/gcp-service-account: sql-webapp@print-nanny.iam.gserviceaccount.com
---
apiVersion: v1
kind: Service
metadata:
  name: django
spec:
  selector: 
    app: django
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
  type: NodePort
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: print-nanny-dot-com
spec:
  domains:
    - print-nanny.com
    - www.print-nanny.com
    - api.print-nanny.com
---
apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: http-to-https
spec:
  redirectToHttps:
    enabled: true
    responseCodeName: MOVED_PERMANENTLY_DEFAULT

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: django
  annotations:
    networking.gke.io/v1beta1.FrontendConfig: "http-to-https"
    kubernetes.io/ingress.global-static-ip-name: "django-static-ip"
    networking.gke.io/managed-certificates: print-nanny-dot-com
spec:
  backend:
    serviceName: django
    servicePort: 80

