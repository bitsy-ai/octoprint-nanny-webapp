# Generated by Django 3.1.7 on 2021-04-28 01:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import print_nanny_webapp.utils.fields


class Migration(migrations.Migration):

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("alerts", "0057_alert_alert_method"),
    ]

    operations = [
        migrations.AlterField(
            model_name="alertsettings",
            name="enabled",
            field=models.BooleanField(
                default=True, help_text="Enable or disable this alert type"
            ),
        ),
        migrations.AlterField(
            model_name="remotecontrolcommandalertsettings",
            name="monitoring_start",
            field=print_nanny_webapp.utils.fields.ChoiceArrayField(
                base_field=models.CharField(
                    choices=[
                        ("RECEIVED", "Command received by device"),
                        ("FAILED", "Command failed"),
                        ("SUCCESS", "Command succeeded"),
                    ],
                    max_length=255,
                ),
                blank=True,
                default=("FAILED",),
                help_text="Fires on <strong>MonitoringStop</strong> updates. Helpful if you want to confirm monitoring started without a problem.",
                size=None,
            ),
        ),
        migrations.AlterField(
            model_name="remotecontrolcommandalertsettings",
            name="monitoring_stop",
            field=print_nanny_webapp.utils.fields.ChoiceArrayField(
                base_field=models.CharField(
                    choices=[
                        ("RECEIVED", "Command received by device"),
                        ("FAILED", "Command failed"),
                        ("SUCCESS", "Command succeeded"),
                    ],
                    max_length=255,
                ),
                blank=True,
                default=("FAILED",),
                help_text="Fires on <strong>MonitoringStop<strong> updates. \n Helps debug unexpected Print Nanny crashes.",
                size=None,
            ),
        ),
        migrations.AlterField(
            model_name="remotecontrolcommandalertsettings",
            name="move_nozzle",
            field=print_nanny_webapp.utils.fields.ChoiceArrayField(
                base_field=models.CharField(
                    choices=[
                        ("RECEIVED", "Command received by device"),
                        ("FAILED", "Command failed"),
                        ("SUCCESS", "Command succeeded"),
                    ],
                    max_length=255,
                ),
                blank=True,
                default=("FAILED",),
                help_text="Fires on <strong>MoveNozzle</strong>command status changes. Helpful for debugging connectivity between Print Nanny and OctoPrint",
                size=None,
            ),
        ),
        migrations.AlterField(
            model_name="remotecontrolcommandalertsettings",
            name="print_pause",
            field=print_nanny_webapp.utils.fields.ChoiceArrayField(
                base_field=models.CharField(
                    choices=[
                        ("RECEIVED", "Command received by device"),
                        ("FAILED", "Command failed"),
                        ("SUCCESS", "Command succeeded"),
                    ],
                    max_length=255,
                ),
                blank=True,
                default=("FAILED",),
                help_text="Fires on <strong>PausePrint</strong> command status changes. Helpful for verifying a print was paused successfully.",
                size=None,
            ),
        ),
        migrations.AlterField(
            model_name="remotecontrolcommandalertsettings",
            name="print_resume",
            field=print_nanny_webapp.utils.fields.ChoiceArrayField(
                base_field=models.CharField(
                    choices=[
                        ("RECEIVED", "Command received by device"),
                        ("FAILED", "Command failed"),
                        ("SUCCESS", "Command succeeded"),
                    ],
                    max_length=255,
                ),
                blank=True,
                default=("FAILED",),
                help_text="Fires on <strong>ResumePrint</strong> command status changes Helpful for verifying a print was resumed.",
                size=None,
            ),
        ),
        migrations.AlterField(
            model_name="remotecontrolcommandalertsettings",
            name="print_start",
            field=print_nanny_webapp.utils.fields.ChoiceArrayField(
                base_field=models.CharField(
                    choices=[
                        ("RECEIVED", "Command received by device"),
                        ("FAILED", "Command failed"),
                        ("SUCCESS", "Command succeeded"),
                    ],
                    max_length=255,
                ),
                blank=True,
                default=("FAILED",),
                help_text="Fires on <strong>StartPrint</strong> updates. Get notified as soon as a print job finishes. ",
                size=None,
            ),
        ),
        migrations.AlterField(
            model_name="remotecontrolcommandalertsettings",
            name="print_stop",
            field=print_nanny_webapp.utils.fields.ChoiceArrayField(
                base_field=models.CharField(
                    choices=[
                        ("RECEIVED", "Command received by device"),
                        ("FAILED", "Command failed"),
                        ("SUCCESS", "Command succeeded"),
                    ],
                    max_length=255,
                ),
                blank=True,
                default=("FAILED",),
                help_text="Fires on <strong>PrintStart</strong> command status changes. Helpful for verifying a print job started without a problem.",
                size=None,
            ),
        ),
        migrations.CreateModel(
            name="AlertMethodSettings",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_dt", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_dt", models.DateTimeField(auto_now=True, db_index=True)),
                (
                    "alert_method",
                    models.CharField(
                        choices=[
                            ("UI", "Receive Print Nanny UI notifications"),
                            ("EMAIL", "Receive email notifications"),
                            ("DISCORD", "Receive notifications through Discord"),
                            (
                                "PARTNER_3DGEEKS",
                                "Receive notifications in 3D Geeks mobile app",
                            ),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "enabled",
                    models.BooleanField(
                        choices=[
                            ("UI", "Receive Print Nanny UI notifications"),
                            ("EMAIL", "Receive email notifications"),
                            ("DISCORD", "Receive notifications through Discord"),
                            (
                                "PARTNER_3DGEEKS",
                                "Receive notifications in 3D Geeks mobile app",
                            ),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_alerts.alertmethodsettings_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
                "base_manager_name": "objects",
            },
        ),
    ]
